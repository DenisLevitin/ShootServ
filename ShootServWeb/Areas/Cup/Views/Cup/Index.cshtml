@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model ShootingCompetitionsRequests.Areas.Cup.Models.CupModelParams

<h3>Создание и просмотр соревнований</h3>

<script type="text/javascript">

    $(document).ready(function () {
        $.datepicker.setDefaults($.datepicker.regional['ru']);
        $(".datepicker").datepicker();

        if ("@Model.IsEditMode" == "False") {
            ChangeRegion();
        }
    });

    $(document).on("change", "#CountryFilter", function() {
        ChangeCountryCupFilter();
    });

    $(document).on("change", "#IdCountry", function() {
        ChangeCountry();
    });

    $(document).on("change", "#IdRegion", function() {
        ChangeRegion();
    });

    $(document).on("click", "#Show", function () {
        var dateFromDate = $("#DateFrom").datepicker("getDate");
        var dateToDate = $("#DateTo").datepicker("getDate");
        var dateFrom = dateFromDate != null && dateFromDate != undefined ? dateFromDate.toISOString() : new Date(1970,1,1).toISOString();
        var dateTo = dateToDate != null && dateToDate != undefined ? dateToDate.toISOString() : new Date(2100, 1, 1).toISOString();
        var regionId = $("#RegionFilter").val();

        GetCupsList(regionId, dateFrom, dateTo);

    });

    $(document).on("click", "#addBt", function() {
        if (CheckLogin()) {
            AddCup();
        }
        else
        {
            var redirectUrl = "@Url.Action("Index", "Cup", new { Area = "Cup"})";
            RedirectLoginPage(redirectUrl);
        }
    });

    // Клик на кнопке редактировать
    $(document).on("click", "#editBt", function() {
        if (CheckLogin()) {
            EditCup();
        }
        else
        {
            var redirectUrl = "@Url.Action("Index", "Cup", new { Area = "Cup"})";
            RedirectLoginPage(redirectUrl);
        }
    });

    // Клик на ссылке Ред.
    $(document).on("click", ".editCup", function() {
        var a = $(this);
        var idCup = a.attr("idcup");
        window.location = "@Url.Action("Index", "Cup")" + "?idCup=" + idCup;

    });

    $(document).on("click", ".delCup", function () {
        if (CheckLogin()) {

            var a = $(this);
            var id = a.attr("idcup");

            $.ajax({
                url: "@Url.Action("DeleteCup")",
                dataType: "JSON",
                data: { idCup: id },
                async: false,
                success: function (data) {
                    if (data.IsOk == true) {

                        var tr = a.closest("tr");
                        $(tr).remove();

                    } else ShowError(data.Message); // сообщение об ошибке как -то показать на странице
                },
                error: function (data) {
                    ShowError("Ошибка ajax");
                }
            });
        }
        else
        {
            var redirectUrl = "@Url.Action("Index", "Cup", new { Area = "Cup"})";
            RedirectLoginPage(redirectUrl);
        }
    });

    // Получить список регионов по стране
    function GetRegions(idCountry, element, tagName) {
        $.ajax({
                url: "@Url.Action("GetRegionsByCountry", "StandartFilters", new { Area = ""})",
                dataType: "html",
            type: "GET",
            async: false,
            data: {
                idCountry: idCountry,
                tagName: tagName,
                addAll : true
            },
            success: function (data) {
                $(element).html("");
                $(element).html(data);

                ChangeRegion();
            },
            error: function () {
                ShowError("Ошибка ajax");
            }
        });
    }

    // Валидация ввода
    function ValidateInput() {

        if (!$("#Name").val()) {
            ShowError("Не введено название соревнования");
            return false;
        }

        if (!$("#IdCupType").val()) {
            ShowError("Не введен тип соревнования");
            return false;
        }

        if (!$("#IdShootingRange").val()) {
            ShowError("Не введен тир, где будет проходить соревнование");
            return false;
        }

        var dateStart = $("#DateStart").datepicker("getDate");
        var dateEnd = $("#DateEnd").datepicker("getDate");

        if (dateStart > dateEnd) {
            ShowError("Дата начала соревнования не может быть позже даты окончания");
            return false;
        }

        if (!$("#IdShootingRange").val()) {
            ShowError("Не введен тир, где будет проходить соревнование");
            return false;
        }

        return true;
    }


    // Получить в формате Json добавляемый список упражнений
    function GetCompetitionsJson() {

        var trList = $("#tableCompList tr");

        var tmp = new Array();
        var j = 0;

        trList.each( function(i, element) {

            var checked = $(element).find(":checked");
            if (checked != null && checked.is(":checked")) {
                j++;
                // Добавляем в JSON
                var idCompetitionType = $(checked).attr("idCompetitionType");
                var idCupCompetitionType = $(checked).attr("idCupCompetitionType");
                var name = $(checked).attr("Name");
                var timeShift = $(element).find(":text");

                //tmp += '{ "Id":'+id+','+'"Name":'+Name+','+'"TimeFirstShift":'+timeShift + ' },';
                tmp.push({
                    IdCompetitionType: idCompetitionType,
                    IdCupCompetitionType : idCupCompetitionType,
                    Name: name,
                    TimeFirstShift: $(element).find(":text").datepicker("getDate")
                });

            }

        });
        //tmp.append("}");

        return $.toJSON(tmp);
    }

    // Редактировать соревнование
    function EditCup() {

        if ( ValidateInput() ) {

            var competitionsJson = GetCompetitionsJson();

            var dateStart = FormatDate($("#DateStart").datepicker("getDate"));
            var dateEnd = FormatDate($("#DateEnd").datepicker("getDate"));

            // dataSend собирается говнокодом, то что ниже желательно не трогать. Очень важен порядок конкатенации
            var dataSend = "DateStart=" + dateStart + "&DateEnd=" + dateEnd + "&" + $("#add").serialize() + "&competitionTypes=" + competitionsJson + "&idEditCup=" + "@Model.Id";

            $.ajax({
                url: "@Url.Action("UpdateCup")",
                dataType: "JSON",
                data: dataSend,
                async: false,
                success: function(data) {
                    if (data.IsOk == true) {
                        ShowInfo("Соревнование отредактировано"); // ShowInfo
                    } else ShowError(data.Message); // сообщение об ошибке как -то показать на странице
                },
                error: function(data) {
                    ShowError("Ошибка ajax");
                }
            });
        }
    }

    // Добавить соревнование
    function AddCup() {
        if (ValidateInput()) {
            var competitionsJson = GetCompetitionsJson();
            var dateStart = FormatDate($("#DateStart").datepicker("getDate"));
            var dateEnd = FormatDate($("#DateEnd").datepicker("getDate"));
            // dataSend собирается говнокодом, то что ниже желательно не трогать. Очень важен порядок конкатенации
            var dataSend = "DateStart=" + dateStart + "&DateEnd=" + dateEnd + "&" + $("#add").serialize() + "&competitionTypes=" + competitionsJson

            $.ajax({
                url: "@Url.Action("AddCup")",
                dataType: "JSON",
                data: dataSend,
                async: false,
                success: function(data) {
                    if (data.IsOk == true) {
                        ShowInfo("Соревнование добавлено успешно"); // ShowInfo
                        window.location = "@Url.Action("Index", "ViewCup", new {Area = "Cup"})" + "?idCup=" + data.IdCup;
                    } else ShowError(data.Message); // сообщение об ошибке как -то показать на странице
                },
                error: function(data) {
                    ShowError("Ошибка ajax");
                }
            });

        }
    }

    // Изменение фильтра по стране
    function ChangeCountryCupFilter() {
        var idCountry = $("#CountryFilter").val();
        GetRegions(idCountry, $("#cupRegionFilter"), "RegionFilter");
    }

    // Должна вызываться при изменении страны
    function ChangeCountry() {
        var idCountry = $("#IdCountry").val();
        GetRegions(idCountry, $("#tdRegion"), "IdRegion");
    }

    // Должна вызываться при изменении региона
    function  ChangeRegion() {
        var idRegion = $("#IdRegion").val();
        GetShootingRanges(idRegion);
    }

    // Получить список тиров по региону
    function GetShootingRanges(idRegion) {

        if (idRegion != undefined) {
            $.ajax({
                    url: "@Url.Action("GetShootingRanges")",
                    dataType: "html",
                    data: { idRegion: idRegion},
                    async: false,
                    success: function (data) {
                        $("#tdRange").html("");
                        $("#tdRange").html(data);
                    },
                    error: function (data) {
                       ShowError("Ошибка ajax");
                    }
            });
        }
    }

    // Получить список соревнований
    function GetCupsList(idRegion, dateFrom, dateTo)
    {
        if ( dateFrom != undefined && dateTo != undefined) {

            $.ajax({
                url: "@Url.Action("GetCupLists")",
                dataType: "html",
                data: { idRegion: idRegion, dateFrom : dateFrom, dateTo : dateTo },
                async: false,
                success: function (data) {
                    $("#divCupsList").html(data);
                },
                error: function (data) {
                    ShowError("Ошибка ajax");
                }
            });
        }
    }

    // Проверка залогированности
    function CheckLogin() {
        var val = "@Model.IsLogin";
        return val.toLowerCase() === "true";
    }

    $(document).ready(togetherContent("#divAddCup", "#divAddHidden", 'Добавить соревнование'));
    $(document).ready(togetherContent("#divListCup", "#rightDiv", 'Список соревнований'));

    $(document).ready(function () {
        AddSumbol($("#divAddCup"), true, 'Добавить соревнование');
    });

    $(document).ready(function () {
        AddSumbol($("#divListCup"), true, 'Список соревнований');
    });
</script>

<style>
    .tableInfo {
        font-size: 11px;
    }

        .tableInfo a {
            font-size: 9px;
        }
</style>

<div id="divContentAddCup" style="margin-top:15px; width:100%; height:80%;">
    <div id="divAdd" class="instr" style="width:1000px;padding:0;">
        <div id="divAddCup" class="addListStyle" style="width:100%;padding-bottom:20px;padding-top:20px;"/>	 	
        <div id="divAddHidden" style="display:none;">
            <div style="position:relative; height:330px; margin-top: 20px;">
                <div style="float:left;">
                    <form id="add" action="@Url.Action("AddCup")">

                        <table>
                            <tr>
                                <td>@Html.LabelFor(x => x.Name)</td>
                                <td>@Html.TextBoxFor(x => x.Name)</td>
                            </tr>
                            <tr>
                                <td>@Html.LabelFor(x => x.IdCupType)</td>
                                <td>@Html.DropDownListFor(x => x.IdCupType, Model.CupTypes)</td>
                            </tr>
                            <tr>
                                <td>@Html.LabelFor(x => x.IdCountry)</td>
                                <td>@Html.DropDownListFor(x => x.IdCountry, Model.Countries)</td>
                            </tr>
                            <tr>
                                <td>@Html.LabelFor(x => x.IdRegion)</td>
                                <td id="tdRegion">@Html.DropDownListFor(x => x.IdRegion, Model.Regions)</td>
                            </tr>
                            <tr>
                                <td>@Html.LabelFor(x => x.IdShootingRange)</td>
                                <td id="tdRange">@Html.DropDownListFor(x => x.IdShootingRange, Model.ShootingRanges)</td>
                            </tr>
                            <tr>
                                <td></td>
                                <td>@Html.ActionLink("Добавить тир", "Index", "AddShootingRange", new { Area = "ShootingRange" }, new { target = "blank" })</td>
                            </tr>
                            <tr>
                                <td>@Html.LabelFor(x => x.DateStart)</td>
                                <td>@Html.TextBoxFor(x => x.DateStart, "{0:dd.MM.yyyy}", new { @class = "datepicker" })</td>
                            </tr>
                            <tr>
                                <td>@Html.LabelFor(x => x.DateEnd)</td>
                                <td>@Html.TextBoxFor(x => x.DateEnd, "{0:dd.MM.yyyy}", new { @class = "datepicker" })</td>
                            </tr>
                        </table>

                    </form>
                </div>

                <div id="divComp" style="float:right;">
                    <form id="frmCompetitions">
                        <div>
                            <span style="margin-bottom:15px;">Упражнения</span>

                            @{Html.RenderPartial("CompetitionsList", Model.CompetitionTypes); }
                        </div>
                    </form>
                </div>
            </div>
            @if (!Model.IsEditMode)
            {
                <input type="button" id="addBt" value="Добавить" />
            }
            else
            {
                <input type="button" id="editBt" value="Сохранить">
            }
        </div>
    </div>

    <div class="instr" style="width:1000px; padding:0; margin-bottom:30px;">
        <div id="divListCup" class="addListStyle" style="width:100%;padding-bottom:20px;padding-top:20px;"></div>
        <div id="rightDiv" style="display:none;">
            <div id="divFiltres">
                <table style="margin:auto;">
                    <tr><td>Страна</td><td>@Html.DropDownList("CountryFilter", Model.Countries)</td></tr>
                    <tr><td>Соревнование в регионе</td><td id="cupRegionFilter">@Html.DropDownList("RegionFilter", Model.Regions)</td></tr>
                    <tr><td>Проводящиеся с</td><td>@Html.TextBox("DateFrom", null, new { @class = "datepicker" })</td></tr>
                    <tr><td>Проводящиеся по</td><td>@Html.TextBox("DateTo", null, new { @class = "datepicker" })</td></tr>
                </table>
                <input type="button" id="Show" Value="Показать" />
            </div>
            <div id="divCupsList">
            </div>
        </div>
    </div>
</div>
